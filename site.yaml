---

# This playbook should deploy everything

- hosts: all
  tasks:
    - name: "Ensure required variables have been defined"
      ansible.builtin.assert:
        quiet: true
        fail_msg: "Required variable has not been defined"
        that:
          - maas_url is defined
          - maas_version is defined
          - maas_installation_type is defined
          - maas_postgres_password is defined

    - name: "Ensure maas_version is a version string"
      ansible.builtin.assert:
        fail_msg: "'{{ maas_version }}' is not a valid version number"
        that:
          - maas_version is regex('\d+\.\d+(\.\d+)?')

    - name: "Ensure o11y can be enabled"
      ansible.builtin.assert:
        quiet: true
        fail_msg: "Prometheus or Loki endpoints must be defined"
        that:
          - (o11y_prometheus_url|length > 0 or o11y_loki_url|length > 0)
      when: o11y_enable

    - name: "Define proxy environment if proxies given"
      ansible.builtin.set_fact:
        proxy_env: "{{ proxy_env | combine({'http_proxy' : http_proxy | d(omit)}) |
          combine({'https_proxy' : https_proxy | d(omit)}) }}"

    - name: "Show proxy environment if in use"
      ansible.builtin.debug:
        msg: "Playbooks using proxy settings: {{ proxy_env }}"
      with_dict: "{{ proxy_env }}"

    - name: "Ensure dist is up to date"
      ansible.builtin.apt:
        upgrade: "dist"
        update_cache: true
        cache_valid_time: 3600
      become: true

    - name: "Discover host architecture"
      ansible.builtin.command: dpkg --print-architecture
      register: arch_out
      changed_when: false

    - name: "Set architechture facts"
      ansible.builtin.set_fact:
        ubuntu_arch: "{{ arch_out.stdout }}"

- hosts: maas_postgres
  roles:
    - patroni
  become: true
  gather_facts: true
  vars:
    patroni_group: "maas_postgres"
    vip_ip: 192.168.121.160
    vip_mask: 24
  tasks:
    - name: Flush handlers
      meta: flush_handlers

    - name: Create MAAS postgres database
      run_once: true
      community.postgresql.postgresql_db:
        name: "{{ item }}"
        login_user: "{{ patroni_auth.superuser.username }}"
        login_password: "{{ patroni_auth.superuser.password }}"
        host: "{{ vip_ip }}"
        state: present
      loop:
        - admin
        - maasdb
        - maas

    - name: Create MAAS postgres user
      run_once: true
      community.postgresql.postgresql_user:
        name: "{{ maas_postgres_user }}"
        password: "{{ maas_postgres_password }}"
        login_user: "{{ patroni_auth.superuser.username }}"
        login_password: "{{ patroni_auth.superuser.password }}"
        host: "{{ vip_ip }}"
        state: present

    - name: Create MAAS postgres database
      run_once: true
      community.postgresql.postgresql_db:
        name: "{{ maas_postgres_database }}"
        owner: "{{ maas_postgres_user }}"
        login_user: "{{ patroni_auth.superuser.username }}"
        login_password: "{{ patroni_auth.superuser.password }}"
        host: "{{ vip_ip }}"
        state: "{{ 'present' if maas_postgres_action | lower == 'install' else maas_postgres_action }}"

# - hosts: maas_corosync
#   roles:
#     - role: maas_corosync
#   become: true
#   gather_facts: true
#   tags:
#     - maas_corosync
#     - maas_ha_postgres
#   environment: "{{ proxy_env }}"
#
# - hosts: maas_pacemaker
#   roles:
#     - role: maas_pacemaker
#   become: true
#   gather_facts: true
#   tags:
#     - maas_pacemaker
#     - maas_ha_postgres
#   environment: "{{ proxy_env }}"
#
# - hosts: maas_postgres_proxy
#   roles:
#     - role: maas_postgres_proxy
#   become: true
#   gather_facts: true
#   tags:
#     - maas_postgres_proxy
#   environment: "{{ proxy_env }}"

# proxies are provisioned prior to rack controllers so the rack controller
# will request to register to region controllers through the proxy
- hosts: maas_proxy
  roles:
    - role: maas_proxy
  become: true
  gather_facts: true
  tags:
    - maas_proxy
  environment: "{{ proxy_env }}"

- hosts: maas_region_controller
  roles:
    - role: maas_region_controller
    - role: o11y_agent
  become: true
  gather_facts: true
  tags:
    - maas_region_controller
    - maas_controller
  environment: "{{ proxy_env }}"

- hosts: maas_rack_controller
  roles:
    - role: maas_rack_controller
    - role: o11y_agent
  become: true
  gather_facts: true
  tags:
    - maas_rack_controller
    - maas_controller
  environment: "{{ proxy_env }}"
